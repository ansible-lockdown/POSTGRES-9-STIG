---
#DISTRIBUTION STATEMENT A. Approved for public release. Distribution is unlimited.
#
#This material is based upon work supported by the Department of the Air Force and MISSILE DEFENSE AGENCY under Air Force Contract No. FA8702-15-D-0001. Any opinions, findings, conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the Department of the Air Force and MISSILE DEFENSE AGENCY.
#
#Â© 2023 Massachusetts Institute of Technology.
#
#The software/firmware is provided to you on an As-Is basis
#
#Delivered to the U.S. Government with Unlimited Rights, as defined in DFARS Part 252.227-7013 or 7014 (Feb 2014). Notwithstanding any copyright notice, U.S. Government rights in this work are defined by DFARS 252.227-7013 or DFARS 252.227-7014 as detailed above. Use of this work other than as specifically authorized by the U.S. Government may violate any copyrights that exist in this work.

- name: "MEDIUM | PGS9-00-000100 | PostgreSQL must be configured to prohibit or restrict the use of organization-defined functions, ports, protocols, and/or services, as defined in the PPSM CAL and vulnerability assessments."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: restart postgres
  with_items:
      - key: port
        value: "{{ pgs9stig_port }}"
  when:
      - pgs9_00_000100
  tags:
      - PGS9-00-000100

- name: "MEDIUM | PGS9-00-000200 | PostgreSQL must produce audit records containing sufficient information to establish the outcome (success or failure) of the events."
  debug:
      msg: |
          "Using pgaudit PostgreSQL can be configured to audit various facets of PostgreSQL."
          "All errors, denials and unsuccessful requests are logged if logging is enabled."
          Logging and pgaudit are configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_000200
  tags:
      - PGS9-00-000200


- name: |
      "MEDIUM | PGS9-00-000400 | AUDIT | The audit information produced by PostgreSQL must be protected from unauthorized modification."
      "MEDIUM | PGS9-00-002300 | AUDIT | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
  debug:
      msg: "If the PostgreSQL server is configured to use syslog for logging, consult the organization syslog setting for permissions and ownership of logs."
  changed_when:
      - pgs9stig_warn_manual
      - not pgs9stig_manual_000400 or
        not pgs9stig_manual_002300
  when:
      - pgs9_00_000400 or
        pgs9_00_002300
      - pgs9stig_log_destination == 'syslog'
      - not pgs9stig_with_rsyslog
  tags:
      - PGS9-00-000400
      - PGS9-00-002300

- name: |
      "MEDIUM | PGS9-00-000400 | The audit information produced by PostgreSQL must be protected from unauthorized modification."
      "MEDIUM | PGS9-00-002300 | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
      "MEDIUM | PGS9-00-004200 | The audit information produced by PostgreSQL must be protected from unauthorized read access."
  block:
      - name: |
            "MEDIUM | PGS9-00-000400 | The audit information produced by PostgreSQL must be protected from unauthorized modification."
            "MEDIUM | PGS9-00-002300 | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
            "MEDIUM | PGS9-00-004200 | The audit information produced by PostgreSQL must be protected from unauthorized read access."
        lineinfile:
            path: "{{ pgs9stig_rsyslog_conf }}"
            line: $umask 0077
            insertbefore: BOF
        notify: restart rsyslog

      - name: "MEDIUM | PGS9-00-000400 PGS9-00-002300 PGS9-00-004200 | Verify log access on disk."
        file:
            path: "{{ pgs9stig_rsyslog_log_path }}"
            mode: go-rwx
  when:
      - pgs9_00_000400 or
        pgs9_00_002300 or
        pgs9_00_004200
      - pgs9stig_with_rsyslog
  tags:
      - PGS9-00-000400
      - PGS9-00-002300
      - PGS9-00-004200

- name: |
      "MEDIUM | PGS9-00-000400 | The audit information produced by PostgreSQL must be protected from unauthorized modification."
      "MEDIUM | PGS9-00-002300 | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
      "MEDIUM | PGS9-00-004200 | The audit information produced by PostgreSQL must be protected from unauthorized read access."
  block:
      - name: |
            "MEDIUM | PGS9-00-000400 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized modification."
            "MEDIUM | PGS9-00-002300 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
            "MEDIUM | PGS9-00-004200 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized read access."
        lineinfile:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
        module_defaults: "{{ pgs9stig_lineinfile }}"
        notify: reload postgres
        with_dict:
            log_file_mode: "0600"

      - name: |
            "MEDIUM | PGS9-00-000400 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized modification."
            "MEDIUM | PGS9-00-002300 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized deletion."
            "MEDIUM | PGS9-00-004200 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized read access."
        file:
            path: "{{ pgs9stig_log_directory }}"
            mode: go-rwx
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            recurse: yes
  when:
      - pgs9_00_000400 or
        pgs9_00_002300 or
        pgs9_00_004200 or
        false
      - pgs9stig_log_destination == 'stderr'
  tags:
      - PGS9-00-000400
      - PGS9-00-002300
      - PGS9-00-004200


- name: "MEDIUM | PGS9-00-000500 | PostgreSQL must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
  block:
      - name: "MEDIUM | PGS9-00-000500 | AUDIT | PostgreSQL must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
        command: "true"
        register: pgs9_00_000500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-000500 | PATCH | PostgreSQL must integrate with an organization-level authentication/access mechanism providing account management and automation for all users, groups, roles, and any other principals."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_000500
  tags:
      - PGS9-00-000500
      - notimplemented

- name: "MEDIUM | PGS9-00-000600 | PostgreSQL must provide non-privileged users with error messages that provide information necessary for corrective actions without revealing information that could be exploited by adversaries."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_items:
      - key: client_min_messages
        value: error
  when:
      - pgs9_00_000600
  tags:
      - PGS9-00-000600


- name: "MEDIUM | PGS9-00-000700 | Privileges to change PostgreSQL software modules must be limited."
  block:
      - name: "MEDIUM | PGS9-00-000700 | AUDIT | Privileges to change PostgreSQL software modules must be limited."
        shell: rpm -Va {{ pgs9stig_postgres_packages | join(" ") }} | grep -v "^.\....\.\...  c"
        args:
            warn: no
        register: pgs9_00_000700_audit
        check_mode: no
        changed_when: pgs9_00_000700_audit.rc == 0
        failed_when: pgs9_00_000700_audit.rc > 1

      - name: "MEDIUM | PGS9-00-000700 | PATCH | Privileges to change PostgreSQL software modules must be limited."
        shell: rpm --setugids -a {{ pgs9stig_postgres_packages | join(" ") }} ; rpm --setperms -a {{ pgs9stig_postgres_packages | join(" ") }}
        args:
            warn: no
        when: pgs9_00_000700_audit is changed

      - name: "MEDIUM | PGS9-00-000700 | PATCH | Privileges to change PostgreSQL software modules must be limited."
        file:
            path: "{{ pgs9stig_pgdata }}"
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            mode: o-w
  when:
      - pgs9_00_000700
  tags:
      - PGS9-00-000700


- name: "MEDIUM | PGS9-00-000710 | PostgreSQL must limit privileges to change functions and triggers, and links to software external to PostgreSQL."
  block:
      - name: "MEDIUM | PGS9-00-000710 | AUDIT | PostgreSQL must limit privileges to change functions and triggers, and links to software external to PostgreSQL."
        command: "true"
        register: pgs9_00_000710_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-000710 | PATCH | PostgreSQL must limit privileges to change functions and triggers, and links to software external to PostgreSQL."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_000710
  tags:
      - PGS9-00-000710
      - notimplemented

- name: "MEDIUM | PGS9-00-000800 | If passwords are used for authentication, PostgreSQL must transmit only encrypted representations of passwords."
  replace:
      path: "{{ pgs9stig_pgdata }}/pg_hba.conf"
      regexp: '^([^#\n].*)password'
      replace: '\1md5'
  when:
      - pgs9_00_000800
  tags:
      - PGS9-00-000800

- name: "MEDIUM | PGS9-00-000900 | PostgreSQL must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies."
  block:
      - name: "MEDIUM | PGS9-00-000900 | AUDIT | PostgreSQL must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies."
        command: "true"
        register: pgs9_00_000900_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-000900 | PATCH | PostgreSQL must enforce approved authorizations for logical access to information and system resources in accordance with applicable access control policies."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_000900
  tags:
      - PGS9-00-000900
      - notimplemented

- name: "MEDIUM | PGS9-00-001100 | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in transmission."
  block:
      - name: "MEDIUM | PGS9-00-001100 | AUDIT | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in transmission."
        command: "true"
        register: pgs9_00_001100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001100 | PATCH | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in transmission."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001100
  tags:
      - PGS9-00-001100
      - notimplemented


- name: "MEDIUM | PGS9-00-001200 | PostgreSQL must limit the number of concurrent sessions to an organization-defined number per user for all accounts and/or account types."
  block:
      - name: "MEDIUM | PGS9-00-001200 | AUDIT | PostgreSQL must limit the number of concurrent sessions to an organization-defined number per user for all accounts and/or account types."
        debug:
            msg: "If the total amount of connections is greater than documented by an organization, this is a finding."
        changed_when:
            - pgs9stig_warn_docs
            - not pgs9stig_doc_001200

      - name: "MEDIUM | PGS9-00-001200 | PATCH | PostgreSQL must limit the number of concurrent sessions to an organization-defined number per user for all accounts and/or account types."
        lineinfile:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
        module_defaults: "{{ pgs9stig_lineinfile }}"
        notify: restart postgres
        with_items:
            - key: max_connections
              value: "{{ pgs9stig_max_connections }}"
  when:
      - pgs9_00_001200
  tags:
      - PGS9-00-001200


- name: "MEDIUM | PGS9-00-001300 | The role(s)/group(s) used to modify database structure (including but not necessarily limited to tables, indexes, storage, etc.) and logic modules (functions, trigger procedures, links to software external to PostgreSQL, etc.) must be restricted to authorized users."
  block:
      - name: "MEDIUM | PGS9-00-001300 | AUDIT | The role(s)/group(s) used to modify database structure (including but not necessarily limited to tables, indexes, storage, etc.) and logic modules (functions, trigger procedures, links to software external to PostgreSQL, etc.) must be restricted to authorized users."
        command: "true"
        register: pgs9_00_001300_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001300 | PATCH | The role(s)/group(s) used to modify database structure (including but not necessarily limited to tables, indexes, storage, etc.) and logic modules (functions, trigger procedures, links to software external to PostgreSQL, etc.) must be restricted to authorized users."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001300
  tags:
      - PGS9-00-001300
      - notimplemented

- name: "MEDIUM | PGS9-00-001400 | PostgreSQL must uniquely identify and authenticate non-organizational users (or processes acting on behalf of non-organizational users)."
  block:
      - name: "MEDIUM | PGS9-00-001400 | AUDIT | PostgreSQL must uniquely identify and authenticate non-organizational users (or processes acting on behalf of non-organizational users)."
        command: "true"
        register: pgs9_00_001400_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001400 | PATCH | PostgreSQL must uniquely identify and authenticate non-organizational users (or processes acting on behalf of non-organizational users)."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001400
  tags:
      - PGS9-00-001400
      - notimplemented

- name: "MEDIUM | PGS9-00-001700 | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in storage."
  block:
      - name: "MEDIUM | PGS9-00-001700 | AUDIT | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in storage."
        command: "true"
        register: pgs9_00_001700_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001700 | PATCH | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in storage."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001700
  tags:
      - PGS9-00-001700
      - notimplemented

- name: "MEDIUM | PGS9-00-001800 | PostgreSQL must check the validity of all data inputs except those specifically identified by the organization."
  block:
      - name: "MEDIUM | PGS9-00-001800 | AUDIT | PostgreSQL must check the validity of all data inputs except those specifically identified by the organization."
        command: "true"
        register: pgs9_00_001800_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001800 | PATCH | PostgreSQL must check the validity of all data inputs except those specifically identified by the organization."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001800
  tags:
      - PGS9-00-001800
      - notimplemented

- name: "MEDIUM | PGS9-00-001900 | PostgreSQL and associated applications must reserve the use of dynamic code execution for situations that require it."
  block:
      - name: "MEDIUM | PGS9-00-001900 | AUDIT | PostgreSQL and associated applications must reserve the use of dynamic code execution for situations that require it."
        command: "true"
        register: pgs9_00_001900_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-001900 | PATCH | PostgreSQL and associated applications must reserve the use of dynamic code execution for situations that require it."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_001900
  tags:
      - PGS9-00-001900
      - notimplemented

- name: "MEDIUM | PGS9-00-002000 | PostgreSQL and associated applications, when making use of dynamic code execution, must scan input data for invalid values that may indicate a code injection attack."
  block:
      - name: "MEDIUM | PGS9-00-002000 | AUDIT | PostgreSQL and associated applications, when making use of dynamic code execution, must scan input data for invalid values that may indicate a code injection attack."
        command: "true"
        register: pgs9_00_002000_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-002000 | PATCH | PostgreSQL and associated applications, when making use of dynamic code execution, must scan input data for invalid values that may indicate a code injection attack."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_002000
  tags:
      - PGS9-00-002000
      - notimplemented

- name: "MEDIUM | PGS9-00-002100 | PostgreSQL must allocate audit record storage capacity in accordance with organization-defined audit record storage requirements."
  block:
      - name: "MEDIUM | PGS9-00-002100 | AUDIT | PostgreSQL must allocate audit record storage capacity in accordance with organization-defined audit record storage requirements."
        command: "true"
        register: pgs9_00_002100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-002100 | PATCH | PostgreSQL must allocate audit record storage capacity in accordance with organization-defined audit record storage requirements."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_002100
  tags:
      - PGS9-00-002100
      - notimplemented

- name: "MEDIUM | PGS9-00-002200 | PostgreSQL must enforce discretionary access control policies, as defined by the data owner, over defined subjects and objects."
  block:
      - name: "MEDIUM | PGS9-00-002200 | AUDIT | PostgreSQL must enforce discretionary access control policies, as defined by the data owner, over defined subjects and objects."
        command: "true"
        register: pgs9_00_002200_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-002200 | PATCH | PostgreSQL must enforce discretionary access control policies, as defined by the data owner, over defined subjects and objects."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_002200
  tags:
      - PGS9-00-002200
      - notimplemented

- name: "MEDIUM | PGS9-00-002400 | PostgreSQL must record time stamps, in audit records and application data, that can be mapped to Coordinated Universal Time (UTC, formerly GMT)."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_items:
      - key: log_timezone
        value: "{{ pgs9stig_log_timezone }}"
  when:
      - pgs9_00_002400
  tags:
      - PGS9-00-002400

- name: "MEDIUM | PGS9-00-002500 | PostgreSQL must reveal detailed error messages only to the ISSO, ISSM, SA and DBA."
  block:
      - name: "MEDIUM | PGS9-00-002500 | AUDIT | PostgreSQL must reveal detailed error messages only to the ISSO, ISSM, SA and DBA."
        command: "true"
        register: pgs9_00_002500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-002500 | PATCH | PostgreSQL must reveal detailed error messages only to the ISSO, ISSM, SA and DBA."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_002500
  tags:
      - PGS9-00-002500
      - notimplemented


- name: |
      "MEDIUM | PGS9-00-002600 | PostgreSQL must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited."
      "MEDIUM | PGS9-00-010700 | PostgreSQL must protect its audit features from unauthorized access."
  block:
      - name: |
            "MEDIUM | PGS9-00-002600 | PATCH | PostgreSQL must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited."
            "MEDIUM | PGS9-00-010700 | PATCH | PostgreSQL must protect its audit features from unauthorized access."
        file:
            path: "{{ pgs9stig_pgdata }}"
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            recurse: yes

      - name: |
            "MEDIUM | PGS9-00-002600 | AUDIT | PostgreSQL must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited."
            "MEDIUM | PGS9-00-010700 | AUDIT | PostgreSQL must protect its audit features from unauthorized access."
        shell: set -o pipefail ; psql -c '\du' | grep Superuser | awk '{print $1}'
        become_user: "{{ pgs9stig_postgres_user }}"
        register: pgs9_00_002600_audit
        check_mode: no
        changed_when: disallowed_superusers | length != 0

      - name: |
            "MEDIUM | PGS9-00-002600 | AUDIT | PostgreSQL must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited."
            "MEDIUM | PGS9-00-010700 | AUDIT | PostgreSQL must protect its audit features from unauthorized access."
        debug:
            msg: |
                Found unauthorized superusers:
                {{ disallowed_superusers | join('\n') }}
        changed_when: yes
        when: pgs9_00_002600_audit is changed

      - name: |
            "MEDIUM | PGS9-00-002600 | PATCH | PostgreSQL must allow only the ISSM (or individuals or roles appointed by the ISSM) to select which auditable events are to be audited."
            "MEDIUM | PGS9-00-010700 | PATCH | PostgreSQL must protect its audit features from unauthorized access."
        command: psql -c 'alter user {{ item }} with nosuperuser ;'
        become_user: "{{ pgs9stig_postgres_user }}"
        with_items: "{{ disallowed_superusers }}"
  vars:
      disallowed_superusers: "{{ pgs9_00_002600_audit.stdout_lines | difference(pgs9stig_allowed_superusers) }}"
  when:
      - pgs9_00_002600 or
        pgs9_00_010700 or
        false
  tags:
      - PGS9-00-002600
      - PGS9-00-010700


- name: "MEDIUM | PGS9-00-002700 | PostgreSQL must provide an immediate real-time alert to appropriate support staff of all audit failure events requiring real-time alerts."
  block:
      - name: "MEDIUM | PGS9-00-002700 | AUDIT | PostgreSQL must provide an immediate real-time alert to appropriate support staff of all audit failure events requiring real-time alerts."
        command: "true"
        register: pgs9_00_002700_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-002700 | PATCH | PostgreSQL must provide an immediate real-time alert to appropriate support staff of all audit failure events requiring real-time alerts."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_002700
  tags:
      - PGS9-00-002700
      - notimplemented

- name: "MEDIUM | PGS9-00-003000 | PostgreSQL must maintain the confidentiality and integrity of information during reception."
  block:
      - name: "MEDIUM | PGS9-00-003000 | AUDIT | PostgreSQL must maintain the confidentiality and integrity of information during reception."
        command: "true"
        register: pgs9_00_003000_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-003000 | PATCH | PostgreSQL must maintain the confidentiality and integrity of information during reception."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_003000
  tags:
      - PGS9-00-003000
      - notimplemented

- name: "MEDIUM | PGS9-00-003100 | Database objects (including but not limited to tables, indexes, storage, trigger procedures, functions, links to software external to PostgreSQL, etc.) must be owned by database/DBMS principals authorized for ownership."
  block:
      - name: "MEDIUM | PGS9-00-003100 | AUDIT | Database objects (including but not limited to tables, indexes, storage, trigger procedures, functions, links to software external to PostgreSQL, etc.) must be owned by database/DBMS principals authorized for ownership."
        command: "true"
        register: pgs9_00_003100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-003100 | PATCH | Database objects (including but not limited to tables, indexes, storage, trigger procedures, functions, links to software external to PostgreSQL, etc.) must be owned by database/DBMS principals authorized for ownership."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_003100
  tags:
      - PGS9-00-003100
      - notimplemented

- name: "MEDIUM | PGS9-00-003200 | The PostgreSQL software installation account must be restricted to authorized users."
  block:
      - name: "MEDIUM | PGS9-00-003200 | AUDIT | The PostgreSQL software installation account must be restricted to authorized users."
        command: "true"
        register: pgs9_00_003200_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-003200 | PATCH | The PostgreSQL software installation account must be restricted to authorized users."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_003200
  tags:
      - PGS9-00-003200
      - notimplemented


- name: "MEDIUM | PGS9-00-003300 | Database software, including PostgreSQL configuration files, must be stored in dedicated directories separate from the host OS and other applications."
  block:
      - name: "MEDIUM | PGS9-00-003300 | AUDIT | Database software, including PostgreSQL configuration files, must be stored in dedicated directories separate from the host OS and other applications."
        shell: rpm -qla '*postg*' | xargs sh -c 'find $@ -maxdepth 0 -type d' |
                grep -P '^/(usr|opt).*/lib' |
                xargs sh -c 'find /etc/system-release $@ -exec rpm -qf --quiet {} \; -o -print' arg0
        args:
            warn: no
        register: pgs9_00_003300_audit
        check_mode: no
        changed_when: pgs9_00_003300_audit.stdout_lines | length > 0

      - name: "MEDIUM | PGS9-00-003300 | PATCH | Database software, including PostgreSQL configuration files, must be stored in dedicated directories separate from the host OS and other applications."
        debug:
            msg: |
                If any non-PostgreSQL software directories exist on the disk directory, examine or investigate their use. If any of the directories are used by other applications, including third-party applications that use the PostgreSQL, this is a finding.

                Only applications that are required for the functioning and administration, not use, of the PostgreSQL software library should be located in the same disk directory as the PostgreSQL software libraries.

                If other applications are located in the same directory as PostgreSQL, this is a finding.

                ITEMS FOUND:
                {{ pgs9_00_003300_audit.stdout }}
        changed_when: yes
        when: pgs9_00_003300_audit is changed
  when:
      - pgs9_00_003300
  tags:
      - PGS9-00-003300


- name: "MEDIUM | PGS9-00-003500 | PostgreSQL must include additional, more detailed, organization-defined information in the audit records for audit events identified by type, location, or subject."
  block:
      - name: "MEDIUM | PGS9-00-003500 | AUDIT | PostgreSQL must include additional, more detailed, organization-defined information in the audit records for audit events identified by type, location, or subject."
        command: "true"
        register: pgs9_00_003500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-003500 | PATCH | PostgreSQL must include additional, more detailed, organization-defined information in the audit records for audit events identified by type, location, or subject."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_003500
  tags:
      - PGS9-00-003500
      - notimplemented

- name: "MEDIUM | PGS9-00-003600 | Execution of software modules (to include functions and trigger procedures) with elevated privileges must be restricted to necessary cases only."
  block:
      - name: "MEDIUM | PGS9-00-003600 | AUDIT | Execution of software modules (to include functions and trigger procedures) with elevated privileges must be restricted to necessary cases only."
        command: "true"
        register: pgs9_00_003600_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-003600 | PATCH | Execution of software modules (to include functions and trigger procedures) with elevated privileges must be restricted to necessary cases only."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_003600
  tags:
      - PGS9-00-003600
      - notimplemented

- name: "MEDIUM | PGS9-00-003700 | When invalid inputs are received, PostgreSQL must behave in a predictable and documented manner that reflects organizational and system objectives."
  debug:
      msg: |
          Review system documentation to determine how input errors from application to PostgreSQL are to be handled in general and if any special handling is defined for specific circumstances.

          If it does not implement the documented behavior, this is a finding.
  changed_when:
      - pgs9stig_warn_docs
      - not pgs9stig_doc_003700
  tags:
      - PGS9-00-003700

- name: "MEDIUM | PGS9-00-003800 | PostgreSQL must utilize centralized management of the content captured in audit records generated by all components of PostgreSQL."
  debug:
      msg: "If PostgreSQL audit records are not written directly to or systematically transferred to a centralized log management system, this is a finding."
  changed_when:
      - pgs9stig_warn_manual
      - not pgs9stig_manual_003800
  when:
      - pgs9_00_003800
  tags:
      - PGS9-00-003800

- name: "MEDIUM | PGS9-00-004000 | PostgreSQL must isolate security functions from non-security functions."
  block:
      - name: "MEDIUM | PGS9-00-004000 | AUDIT | PostgreSQL must isolate security functions from non-security functions."
        command: "true"
        register: pgs9_00_004000_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-004000 | PATCH | PostgreSQL must isolate security functions from non-security functions."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_004000
  tags:
      - PGS9-00-004000
      - notimplemented


- name: "MEDIUM | PGS9-00-004100 | PostgreSQL must produce audit records of its enforcement of access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
  block:
      - name: "MEDIUM | PGS9-00-004100 | AUDIT | PostgreSQL must produce audit records of its enforcement of access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
        debug:
            msg: "All denials are logged if logging is enabled.  Logging is configured in PRELIM."

      - name: "MEDIUM | PGS9-00-004100 | PATCH | PostgreSQL must produce audit records of its enforcement of access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
        file:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
            mode: u+rw
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
  when:
      - pgs9_00_004100
  tags:
      - PGS9-00-004100


- name: "MEDIUM | PGS9-00-004200 | The audit information produced by PostgreSQL must be protected from unauthorized read access."
  debug:
      msg: "If PostgreSQL is configured to use syslog for logging, consult organization location and permissions for syslog log files."
  changed_when:
      - pgs9stig_warn_manual
      - not pgs9stig_manual_004200
  when:
      - pgs9_00_004200
      - pgs9stig_log_destination == 'syslog'
      - not pgs9stig_with_rsyslog
  tags:
      - PGS9-00-004200

- name: "MEDIUM | PGS9-00-004200 | The audit information produced by PostgreSQL must be protected from unauthorized read access."
  block:
      - name: "MEDIUM | PGS9-00-004200 | AUDIT | The audit information produced by PostgreSQL must be protected from unauthorized read access."
        find:
            path: "{{ pgs9stig_log_directory }}"
        register: pgs9_00_004200_audit
        changed_when: pgs9_00_004200_audit.files | length == 0

      - name: "MEDIUM | PGS9-00-004200 | PATCH | The audit information produced by PostgreSQL must be protected from unauthorized read access."
        debug:
            msg: |
                "If logs with 600 permissions do not exist in log_destination, this is a finding."

                NO FILES FOUND IN {{ pgs9stig_log_directory }}
        changed_when: yes
        when: pgs9_00_004200_audit is changed
  when:
      - pgs9_00_004200
      - pgs9stig_log_destination == 'stderr'
  tags:
      - PGS9-00-004200


- name: "MEDIUM | PGS9-00-004300 | When updates are applied to PostgreSQL software, any software components that have been replaced or made unnecessary must be removed."
  block:
      - name: "MEDIUM | PGS9-00-004300 | AUDIT | When updates are applied to PostgreSQL software, any software components that have been replaced or made unnecessary must be removed."
        command: rpm -qa *postgres*-server
        args:
            warn: no
        register: pgs9_00_004300_audit
        check_mode: no
        changed_when: pgs9_00_004300_audit.stdout_lines | length > 1

      - name: "MEDIUM | PGS9-00-004300 | PATCH | When updates are applied to PostgreSQL software, any software components that have been replaced or made unnecessary must be removed."
        debug:
            msg: |
                If multiple versions of postgres are installed but are unused, this is a finding.

                VERSIONS FOUND INSTALLED:
                {{ pgs9_00_004300_audit.stdout }}
        changed_when: yes
        when: pgs9_00_004300_audit is changed
  when:
      - pgs9_00_004300
      - not pgs9stig_multiple_versions_in_use
  tags:
      - PGS9-00-004300


- name: "MEDIUM | PGS9-00-004400 | PostgreSQL must generate audit records when categorized information (e.g., classification levels/security levels) is accessed."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_004400
  tags:
      - PGS9-00-004400

- name: "MEDIUM | PGS9-00-004500 | PostgreSQL must generate audit records when unsuccessful attempts to access security objects occur."
  debug:
      msg: "All denials are logged if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_004500
  tags:
      - PGS9-00-004500

- name: |
      "MEDIUM | PGS9-00-004600 PGS9-00-004700 | PostgreSQL must generate audit records when unsuccessful logons or connection attempts occur."
      "MEDIUM | PGS9-00-005100 | PostgreSQL must generate audit records when successful logons or connections occur."
      "MEDIUM | PGS9-00-006200 | PostgreSQL must generate audit records when concurrent logons/connections by the same user from different workstations occur."
      "MEDIUM | PGS9-00-010400 | PostgreSQL must produce audit records containing sufficient information to establish what type of events occurred."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_items:
      - key: log_connections
        value: "on"
      - key: log_line_prefix
        value: "{{ pgs9stig_log_line_prefix }}"
  when:
      - pgs9_00_004600 or
        pgs9_00_004700 or
        pgs9_00_005100 or
        pgs9_00_006200 or
        pgs9_00_010400 or
        false
  tags:
      - PGS9-00-004600
      - PGS9-00-004700
      - PGS9-00-005100
      - PGS9-00-006200
      - PGS9-00-010400

- name: |
      "MEDIUM | PGS9-00-004700 | PostgreSQL must generate audit records showing starting and ending time for user access to the database(s)."
      "MEDIUM | PGS9-00-006200 | PostgreSQL must generate audit records when concurrent logons/connections by the same user from different workstations occur."
      "MEDIUM | PGS9-00-010400 | PostgreSQL must produce audit records containing sufficient information to establish what type of events occurred."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_items:
      - key: log_disconnections
        value: "on"
  when:
      - pgs9_00_004700 or
        pgs9_00_006200 or
        pgs9_00_010400 or
        false
  tags:
      - PGS9-00-004700
      - PGS9-00-006200
      - PGS9-00-010400

- name: "MEDIUM | PGS9-00-004800 | PostgreSQL must generate audit records when unsuccessful attempts to modify security objects occur."
  debug:
      msg: "Unsuccessful attempts to modifying security objects can be logged if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_004800
  tags:
      - PGS9-00-004800

- name: "MEDIUM | PGS9-00-004900 | PostgreSQL must generate audit records when privileges/permissions are added."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_004900
  tags:
      - PGS9-00-004900

- name: "MEDIUM | PGS9-00-005000 | PostgreSQL must generate audit records when unsuccessful attempts to delete categorized information (e.g., classification levels/security levels) occur."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_005000
  tags:
      - PGS9-00-005000

- name: "MEDIUM | PGS9-00-005200 | PostgreSQL must generate audit records when security objects are deleted."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_005200
  tags:
      - PGS9-00-005200

- name: "MEDIUM | PGS9-00-005300 | PostgreSQL must generate audit records when unsuccessful attempts to retrieve privileges/permissions occur."
  debug:
      msg: "All denials are logged if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_005300
  tags:
      - PGS9-00-005300

- name: "MEDIUM | PGS9-00-005400 | PostgreSQL must generate audit records when unsuccessful attempts to delete privileges/permissions occur."
  debug:
      msg: "All denials are logged if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_005400
  tags:
      - PGS9-00-005400

- name: "MEDIUM | PGS9-00-005500 | PostgreSQL must be able to generate audit records when privileges/permissions are retrieved."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_005500
  tags:
      - PGS9-00-005500

- name: "MEDIUM | PGS9-00-005600 | PostgreSQL must generate audit records when unsuccessful attempts to modify categorized information (e.g., classification levels/security levels) occur."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_005600
  tags:
      - PGS9-00-005600

- name: "MEDIUM | PGS9-00-005700 | PostgreSQL must generate audit records when unsuccessful accesses to objects occur."
  debug:
      msg: "All errors and denials are logged if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_005700
  tags:
      - PGS9-00-005700

- name: "MEDIUM | PGS9-00-005800 | PostgreSQL must generate audit records for all privileged activities or other system-level access."
  block:
      - name: "MEDIUM | PGS9-00-005800 | AUDIT | PostgreSQL must generate audit records for all privileged activities or other system-level access."
        command: "true"
        register: pgs9_00_005800_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-005800 | PATCH | PostgreSQL must generate audit records for all privileged activities or other system-level access."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_005800
  tags:
      - PGS9-00-005800
      - notimplemented

- name: "MEDIUM | PGS9-00-005900 | PostgreSQL must generate audit records when unsuccessful attempts to access categorized information (e.g., classification levels/security levels) occur."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_005900
  tags:
      - PGS9-00-005900

- name: "MEDIUM | PGS9-00-006000 | PostgreSQL must be able to generate audit records when security objects are accessed."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006000
  tags:
      - PGS9-00-006000

- name: "MEDIUM | PGS9-00-006100 | PostgreSQL must generate audit records when privileges/permissions are deleted."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006100
  tags:
      - PGS9-00-006100

- name: "MEDIUM | PGS9-00-006300 | PostgreSQL must generate audit records when unsuccessful attempts to delete security objects occur."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006300
  tags:
      - PGS9-00-006300

- name: "MEDIUM | PGS9-00-006400 | PostgreSQL must generate audit records when privileges/permissions are modified."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006400
  tags:
      - PGS9-00-006400

- name: "MEDIUM | PGS9-00-006500 | PostgreSQL must generate audit records when unsuccessful attempts to execute privileged activities or other system-level access occur."
  debug:
      msg: |
          "System documentation should include a definition of the functionality considered privileged."
          "All denials are logged by default if logging is enabled."
          Logging is configured in PRELIM.
  changed_when:
      - pgs9stig_warn_docs
      - not pgs9stig_doc_006500
  when:
      - pgs9_00_006500
  tags:
      - PGS9-00-006500

- name: "MEDIUM | PGS9-00-006600 | PostgreSQL must generate audit records when security objects are modified."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006600
  tags:
      - PGS9-00-006600

- name: "MEDIUM | PGS9-00-006700 | PostgreSQL must generate audit records when categorized information (e.g., classification levels/security levels) is modified."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_006700
  tags:
      - PGS9-00-006700

- name: "MEDIUM | PGS9-00-006800 | PostgreSQL must generate audit records when unsuccessful attempts to modify privileges/permissions occur."
  debug:
      msg: "All denials are logged by default if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_006800
  tags:
      - PGS9-00-006800

- name: "MEDIUM | PGS9-00-006900 | PostgreSQL must generate audit records when unsuccessful attempts to add privileges/permissions occur."
  debug:
      msg: "All denials are logged by default if logging is enabled.  Logging is configured in PRELIM."
  when:
      - pgs9_00_006900
  tags:
      - PGS9-00-006900

- name: "MEDIUM | PGS9-00-007000 | PostgreSQL, when utilizing PKI-based authentication, must validate certificates by performing RFC 5280-compliant certification path validation."
  block:
      - name: "MEDIUM | PGS9-00-007000 | AUDIT | PostgreSQL, when utilizing PKI-based authentication, must validate certificates by performing RFC 5280-compliant certification path validation."
        command: "true"
        register: pgs9_00_007000_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-007000 | PATCH | PostgreSQL, when utilizing PKI-based authentication, must validate certificates by performing RFC 5280-compliant certification path validation."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_007000
  tags:
      - PGS9-00-007000
      - notimplemented

- name: "MEDIUM | PGS9-00-007200 | PostgreSQL must maintain the confidentiality and integrity of information during preparation for transmission."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: restart postgres
  with_items:
      - key: ssl
        value: "on"
  when:
      - pgs9_00_007200
  tags:
      - PGS9-00-007200

- name: "MEDIUM | PGS9-00-007400 | PostgreSQL must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components."
  block:
      - name: "MEDIUM | PGS9-00-007400 | AUDIT | PostgreSQL must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components."
        command: "true"
        register: pgs9_00_007400_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-007400 | PATCH | PostgreSQL must provide audit record generation capability for DoD-defined auditable events within all DBMS/database components."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_007400
  tags:
      - PGS9-00-007400
      - notimplemented

- name: |
      "MEDIUM | PGS9-00-007100 | PostgreSQL must produce audit records containing sufficient information to establish where the events occurred."
      "MEDIUM | PGS9-00-007700 | PostgreSQL must generate time stamps, for audit records and application data, with a minimum granularity of one second."
      "MEDIUM | PGS9-00-007800 | PostgreSQL must produce audit records containing sufficient information to establish the identity of any user/subject or process associated with the event."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_items:
      - key: log_line_prefix
        value: "{{ pgs9stig_log_line_prefix }}"
  when:
      - pgs9_00_007100 or
        pgs9_00_007700 or
        pgs9_00_007800 or
        false
  tags:
      - PGS9-00-007100
      - PGS9-00-007700
      - PGS9-00-007800

- name: "MEDIUM | PGS9-00-008100 | PostgreSQL must use NSA-approved cryptography to protect classified information in accordance with the data owners requirements."
  block:
      - name: "MEDIUM | PGS9-00-008100 | AUDIT | PostgreSQL must use NSA-approved cryptography to protect classified information in accordance with the data owners requirements."
        command: "true"
        register: pgs9_00_008100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008100 | PATCH | PostgreSQL must use NSA-approved cryptography to protect classified information in accordance with the data owners requirements."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008100
  tags:
      - PGS9-00-008100
      - notimplemented

- name: "MEDIUM | PGS9-00-008300 | PostgreSQL must protect the confidentiality and integrity of all information at rest."
  block:
      - name: "MEDIUM | PGS9-00-008300 | AUDIT | PostgreSQL must protect the confidentiality and integrity of all information at rest."
        command: "true"
        register: pgs9_00_008300_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008300 | PATCH | PostgreSQL must protect the confidentiality and integrity of all information at rest."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008300
  tags:
      - PGS9-00-008300
      - notimplemented

- name: "MEDIUM | PGS9-00-008400 | PostgreSQL must prohibit user installation of logic modules (functions, trigger procedures, views, etc.) without explicit privileged status."
  block:
      - name: "MEDIUM | PGS9-00-008400 | AUDIT | PostgreSQL must prohibit user installation of logic modules (functions, trigger procedures, views, etc.) without explicit privileged status."
        command: "true"
        register: pgs9_00_008400_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008400 | PATCH | PostgreSQL must prohibit user installation of logic modules (functions, trigger procedures, views, etc.) without explicit privileged status."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008400
  tags:
      - PGS9-00-008400
      - notimplemented

- name: "MEDIUM | PGS9-00-008500 | PostgreSQL must separate user functionality (including user interface services) from database management functionality."
  block:
      - name: "MEDIUM | PGS9-00-008500 | AUDIT | PostgreSQL must separate user functionality (including user interface services) from database management functionality."
        command: "true"
        register: pgs9_00_008500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008500 | PATCH | PostgreSQL must separate user functionality (including user interface services) from database management functionality."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008500
  tags:
      - PGS9-00-008500
      - notimplemented

- name: "MEDIUM | PGS9-00-008600 | PostgreSQL must initiate session auditing upon startup."
  debug:
      msg: |
          "Using pgaudit PostgreSQL can be configured to audit various facets of PostgreSQL."
          "All errors, denials and unsuccessful requests are logged if logging is enabled."
          Logging and pgaudit are configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_008600
  tags:
      - PGS9-00-008600

- name: "MEDIUM | PGS9-00-008700 | PostgreSQL must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
  block:
      - name: "MEDIUM | PGS9-00-008700 | AUDIT | PostgreSQL must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
        command: "true"
        register: pgs9_00_008700_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008700 | PATCH | PostgreSQL must implement cryptographic mechanisms to prevent unauthorized modification of organization-defined information at rest (to include, at a minimum, PII and classified information) on organization-defined information system components."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008700
  tags:
      - PGS9-00-008700
      - notimplemented

- name: "MEDIUM | PGS9-00-008800 | PostgreSQL must produce audit records containing sufficient information to establish the sources (origins) of the events."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: restart postgres
  with_items:
      - key: log_line_prefix
        value: "{{ pgs9stig_log_line_prefix }}"
      - key: log_hostname
        value: "on"
  when:
      - pgs9_00_008800
  tags:
      - PGS9-00-008800

- name: "MEDIUM | PGS9-00-008900 | Unused database components, PostgreSQL software, and database objects must be removed."
  block:
      - name: "MEDIUM | PGS9-00-008900 | AUDIT | Unused database components, PostgreSQL software, and database objects must be removed."
        command: "true"
        register: pgs9_00_008900_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-008900 | PATCH | Unused database components, PostgreSQL software, and database objects must be removed."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_008900
  tags:
      - PGS9-00-008900
      - notimplemented

- name: "MEDIUM | PGS9-00-009100 | Access to external executables must be disabled or restricted."
  block:
      - name: "MEDIUM | PGS9-00-009100 | AUDIT | Access to external executables must be disabled or restricted."
        command: "true"
        register: pgs9_00_009100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009100 | PATCH | Access to external executables must be disabled or restricted."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009100
  tags:
      - PGS9-00-009100
      - notimplemented

# TODO: give this distruption-high treatment
- name: "MEDIUM | PGS9-00-009200 | Unused database components which are integrated in PostgreSQL and cannot be uninstalled must be disabled."
  block:
      - name: "MEDIUM | PGS9-00-009200 | AUDIT | Unused database components which are integrated in PostgreSQL and cannot be uninstalled must be disabled."
        command: rpm -qa *postgres* --qf='%{name}\n'
        args:
            warn: no
        register: pgs9_00_009200_audit_installed
        check_mode: no
        changed_when: no

      - name: "MEDIUM | PGS9-00-009200 | AUDIT | Unused database components which are integrated in PostgreSQL and cannot be uninstalled must be disabled."
        shell: yumdb search reason dep | grep postgres | xargs rpm -q --qf='%{name}\n'
        register: pgs9_00_009200_audit_dep
        check_mode: no
        changed_when: no

      - name: "MEDIUM | PGS9-00-009200 | PATCH | Unused database components which are integrated in PostgreSQL and cannot be uninstalled must be disabled."
        command: yumdb set reason dep {{ item }}
        register: pgs9_00_009200_audit_unneeded
        with_items: "{{ pgs9_00_009200_audit_installed.stdout_lines |
                difference(pgs9_00_009200_audit_dep.stdout_lines) |
                difference(pgs9stig_postgres_packages + pgs9stig_pgaudit_packages ) }}"

      - name: "MEDIUM | PGS9-00-009200 | PATCH | Unused database components which are integrated in PostgreSQL and cannot be uninstalled must be disabled."
        command: yum autoremove{{ ansible_check_mode | ternary('', ' -y') }}
        check_mode: no
        args:
            warn: no
        register: pgs9_00_009200_patch
        changed_when:
            - >-
              "No Packages marked for removal" not in pgs9_00_009200_patch.stdout or
              pgs9_00_009200_audit_unneeded.results | length > 0
        failed_when:
            - pgs9_00_009200_patch is failed
            - not ansible_check_mode
  when:
      - pgs9_00_009200
      - ansible_pkg_mgr == 'yum'
  tags:
      - PGS9-00-009200


- name: "MEDIUM | PGS9-00-009400 | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in process."
  block:
      - name: "MEDIUM | PGS9-00-009400 | AUDIT | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in process."
        command: "true"
        register: pgs9_00_009400_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009400 | PATCH | PostgreSQL must associate organization-defined types of security labels having organization-defined security label values with information in process."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009400
  tags:
      - PGS9-00-009400
      - notimplemented

- name: "MEDIUM | PGS9-00-009500 | If passwords are used for authentication, PostgreSQL must store only hashed, salted representations of passwords."
  block:
      - name: "MEDIUM | PGS9-00-009500 | AUDIT | If passwords are used for authentication, PostgreSQL must store only hashed, salted representations of passwords."
        command: "true"
        register: pgs9_00_009500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009500 | PATCH | If passwords are used for authentication, PostgreSQL must store only hashed, salted representations of passwords."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009500
  tags:
      - PGS9-00-009500
      - notimplemented

- name: "MEDIUM | PGS9-00-009600 | PostgreSQL must enforce access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
  block:
      - name: "MEDIUM | PGS9-00-009600 | AUDIT | PostgreSQL must enforce access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
        command: "true"
        register: pgs9_00_009600_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009600 | PATCH | PostgreSQL must enforce access restrictions associated with changes to the configuration of PostgreSQL or database(s)."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009600
  tags:
      - PGS9-00-009600
      - notimplemented

- name: "MEDIUM | PGS9-00-009700 | PostgreSQL must protect against a user falsely repudiating having performed organization-defined actions."
  block:
      - name: "MEDIUM | PGS9-00-009700 | AUDIT | PostgreSQL must protect against a user falsely repudiating having performed organization-defined actions."
        command: "true"
        register: pgs9_00_009700_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009700 | PATCH | PostgreSQL must protect against a user falsely repudiating having performed organization-defined actions."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009700
  tags:
      - PGS9-00-009700
      - notimplemented


- name: "MEDIUM | PGS9-00-009800 | PostgreSQL must provide the capability for authorized users to capture, record, and log all content related to a user session."
  block:
      - name: "MEDIUM | PGS9-00-009800 | PATCH | PostgreSQL must provide the capability for authorized users to capture, record, and log all content related to a user session."
        lineinfile:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
        module_defaults: "{{ pgs9stig_lineinfile }}"
        notify: reload postgres
        with_dict:
            log_connections: "on"
            log_disconnections: "on"

      - name: "MEDIUM | PGS9-00-009800 | AUDIT | PostgreSQL must provide the capability for authorized users to capture, record, and log all content related to a user session."
        debug:
            msg: |
                pgaudit is configured in PRELIM
                {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
        changed_when:
            - not pgs9stig_configure_pgaudit
            - pgs9stig_warn_finding
  when:
      - pgs9_00_009800
  tags:
      - PGS9-00-009800


- name: "MEDIUM | PGS9-00-009900 | The system must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75% of maximum audit record storage capacity."
  block:
      - name: "MEDIUM | PGS9-00-009900 | AUDIT | The system must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75% of maximum audit record storage capacity."
        command: "true"
        register: pgs9_00_009900_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-009900 | PATCH | The system must provide a warning to appropriate support staff when allocated audit record storage volume reaches 75% of maximum audit record storage capacity."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_009900
  tags:
      - PGS9-00-009900
      - notimplemented

- name: "MEDIUM | PGS9-00-010000 | PostgreSQL must provide the means for individuals in authorized roles to change the auditing to be performed on all application components, based on all selectable event criteria within organization-defined time thresholds."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_010000
  tags:
      - PGS9-00-010000

- name: "MEDIUM | PGS9-00-010100 | PostgreSQL must require users to reauthenticate when organization-defined circumstances or situations require reauthentication."
  block:
      - name: "MEDIUM | PGS9-00-010100 | AUDIT | PostgreSQL must require users to reauthenticate when organization-defined circumstances or situations require reauthentication."
        command: "true"
        register: pgs9_00_010100_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-010100 | PATCH | PostgreSQL must require users to reauthenticate when organization-defined circumstances or situations require reauthentication."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_010100
  tags:
      - PGS9-00-010100
      - notimplemented

- name: "MEDIUM | PGS9-00-010300 | PostgreSQL must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
  block:
      - name: "MEDIUM | PGS9-00-010300 | AUDIT | PostgreSQL must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
        command: "true"
        register: pgs9_00_010300_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-010300 | PATCH | PostgreSQL must only accept end entity certificates issued by DoD PKI or DoD-approved PKI Certification Authorities (CAs) for the establishment of all encrypted sessions."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_010300
  tags:
      - PGS9-00-010300
      - notimplemented

- name: "MEDIUM | PGS9-00-010400 | PostgreSQL must produce audit records containing sufficient information to establish what type of events occurred."
  debug:
      msg: |
          "Verify that the current settings are appropriate for the organization." for log_line_prefix
          "If the audit record does not log events required by the organization, this is a finding."
  changed_when:
      - pgs9stig_warn_docs
      - not pgs9stig_doc_010400
  when:
      - pgs9_00_010400
  tags:
      - PGS9-00-010400

- name: "MEDIUM | PGS9-00-010500 | PostgreSQL must implement cryptographic mechanisms preventing the unauthorized disclosure of organization-defined information at rest on organization-defined information system components."
  block:
      - name: "MEDIUM | PGS9-00-010500 | AUDIT | PostgreSQL must implement cryptographic mechanisms preventing the unauthorized disclosure of organization-defined information at rest on organization-defined information system components."
        command: "true"
        register: pgs9_00_010500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-010500 | PATCH | PostgreSQL must implement cryptographic mechanisms preventing the unauthorized disclosure of organization-defined information at rest on organization-defined information system components."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_010500
  tags:
      - PGS9-00-010500
      - notimplemented

- name: "MEDIUM | PGS9-00-010600 | PostgreSQL must invalidate session identifiers upon user logout or other session termination."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_dict:
      statement_timeout: "{{ pgs9stig_statement_timeout }}"
      tcp_keepalives_idle: "{{ pgs9stig_tcp_keepalives_idle }}"
      tcp_keepalives_interval: "{{ pgs9stig_tcp_keepalives_interval }}"
      tcp_keepalives_count: "{{ pgs9stig_tcp_keepalives_count }}"
  when:
      - pgs9_00_010600
  tags:
      - PGS9-00-010600


- name: "MEDIUM | PGS9-00-010700 | PostgreSQL must protect its audit features from unauthorized access."
  block:
      - name: "MEDIUM | PGS9-00-010700 | PATCH | PostgreSQL must protect its audit features from unauthorized access."
        file:
            path: "{{ pgs9stig_log_directory }}"
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            recurse: yes

      - name: "MEDIUM | PGS9-00-010700 | PATCH | PostgreSQL must protect its audit features from unauthorized access."
        file:
            path: "{{ pgs9stig_pgdata }}"
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            recurse: yes

      - name: "MEDIUM | PGS9-00-010700 | AUDIT | PostgreSQL must protect its audit features from unauthorized access."
        command: rpm -V {{ pgs9stig_pgaudit_packages | join(" ") }}
        args:
            warn: no
        register: pgs9_00_010700_audit
        check_mode: no
        failed_when: no
        changed_when: pgs9_00_010700_audit.stdout != ""

      - name: "MEDIUM | PGS9-00-010700 | PATCH | PostgreSQL must protect its audit features from unauthorized access."
        shell: rpm --setugids {{ pgs9stig_pgaudit_packages | join(" ") }} ; rpm --setperms {{ pgs9stig_pgaudit_packages | join(" ") }}
        args:
            warn: no
        when: pgs9_00_010700_audit is changed
  when:
      - pgs9_00_010700
  tags:
      - PGS9-00-010700


- name: "MEDIUM | PGS9-00-011100 | PostgreSQL must produce audit records containing time stamps to establish when the events occurred."
  lineinfile:
      path: "{{ pgs9stig_pgdata }}/postgresql.conf"
  module_defaults: "{{ pgs9stig_lineinfile }}"
  notify: reload postgres
  with_dict:
      log_line_prefix: "{{ pgs9stig_log_line_prefix }}"
  when:
      - pgs9_00_011100
  tags:
      - PGS9-00-011100


- name: "MEDIUM | PGS9-00-011200 | PostgreSQL must protect its audit features from unauthorized removal."
  block:
      - name: "MEDIUM | PGS9-00-011200 | AUDIT | PostgreSQL must protect its audit features from unauthorized removal."
        shell: rpm -qal *postgres* | grep /usr/ | grep -E '/(bin|include|lib|share)$'
        args:
            warn: no
        register: pgs9_00_011200_audit
        check_mode: no
        changed_when: no

      - name: "MEDIUM | PGS9-00-011200 | PATCH | PostgreSQL must protect its audit features from unauthorized removal."
        file:
            path: "{{ item }}"
            owner: root
            group: root
        register: pgs9_00_011200_patch
        failed_when:
            - pgs9_00_011200_patch is failed
            # - pgs9_00_011200_patch.state != "absent"
            # workaround for https://github.com/ansible/ansible/issues/66171
            - >-
              " is absent, cannot continue" not in pgs9_00_011200_patch.msg
        with_items: "{{ pgs9_00_011200_audit.stdout_lines }}"
  when:
      - pgs9_00_011200
      - ansible_distribution_major_version is version_compare('7', '==')
      - ansible_pkg_mgr == 'RedHat'
  tags:
      - PGS9-00-011200


- name: "MEDIUM | PGS9-00-011300 | PostgreSQL must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for stand-alone systems."
  block:
      - name: "MEDIUM | PGS9-00-011300 | AUDIT | PostgreSQL must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for stand-alone systems."
        debug:
            msg: |
                "If log_destination is not syslog, this is a finding."
                CURRENT LOG DESTINATION: {{ pgs9stig_log_destination }}
        changed_when:
            - pgs9stig_log_destination != 'syslog'
            - pgs9stig_warn_finding

      - name: "MEDIUM | PGS9-00-011300 | AUDIT | PostgreSQL must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for stand-alone systems."
        debug:
            msg: |
                Check with the organization to see how syslog facilities are defined in their organization.
                If the wrong facility is configured, this is a finding.
        changed_when:
            - pgs9stig_warn_docs
            - not pgs9stig_doc_011300

      - name: "MEDIUM | PGS9-00-011300 | AUDIT | PostgreSQL must off-load audit data to a separate log management facility; this must be continuous and in near real time for systems with a network connection to the storage facility and weekly or more often for stand-alone systems."
        debug:
            msg: |
                If PostgreSQL does not have a continuous network connection to the centralized log management system, and PostgreSQL audit records are not transferred to the centralized log management system weekly or more often, this is a finding.
        changed_when:
            - pgs9stig_warn_manual
            - not pgs9stig_manual_011300
  when:
      - pgs9_00_011300
  tags:
      - PGS9-00-011300

- name: "MEDIUM | PGS9-00-011400 | PostgreSQL must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
  block:
      - name: "MEDIUM | PGS9-00-011400 | AUDIT | PostgreSQL must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
        command: "true"
        register: pgs9_00_011400_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-011400 | PATCH | PostgreSQL must maintain the authenticity of communications sessions by guarding against man-in-the-middle attacks that guess at Session ID values."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_011400
  tags:
      - PGS9-00-011400
      - notimplemented

- name: "MEDIUM | PGS9-00-011500 | PostgreSQL must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
  block:
      - name: "MEDIUM | PGS9-00-011500 | AUDIT | PostgreSQL must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
        command: "true"
        register: pgs9_00_011500_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-011500 | PATCH | PostgreSQL must uniquely identify and authenticate organizational users (or processes acting on behalf of organizational users)."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_011500
  tags:
      - PGS9-00-011500
      - notimplemented

- name: "MEDIUM | PGS9-00-011600 | PostgreSQL must automatically terminate a user session after organization-defined conditions or trigger events requiring session disconnect."
  block:
      - name: "MEDIUM | PGS9-00-011600 | AUDIT | PostgreSQL must automatically terminate a user session after organization-defined conditions or trigger events requiring session disconnect."
        command: "true"
        register: pgs9_00_011600_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-011600 | PATCH | PostgreSQL must automatically terminate a user session after organization-defined conditions or trigger events requiring session disconnect."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_011600
  tags:
      - PGS9-00-011600
      - notimplemented

- name: "MEDIUM | PGS9-00-011800 | PostgreSQL must map the PKI-authenticated identity to an associated user account."
  block:
      - name: "MEDIUM | PGS9-00-011800 | AUDIT | PostgreSQL must map the PKI-authenticated identity to an associated user account."
        command: "true"
        register: pgs9_00_011800_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-011800 | PATCH | PostgreSQL must map the PKI-authenticated identity to an associated user account."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_011800
  tags:
      - PGS9-00-011800
      - notimplemented

- name: "MEDIUM | PGS9-00-011900 | Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
  block:
      - name: "MEDIUM | PGS9-00-011900 | AUDIT | Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
        command: "true"
        register: pgs9_00_011900_audit
        check_mode: no
        changed_when: no
        with_items:
            - not implemented
      - name: "MEDIUM | PGS9-00-011900 | PATCH | Database contents must be protected from unauthorized and unintended information transfer by enforcement of a data-transfer policy."
        command: "true"
        changed_when: no
        with_items:
            - not implemented
  when:
      - pgs9_00_011900
  tags:
      - PGS9-00-011900
      - notimplemented

- name: "MEDIUM | PGS9-00-012000 | Access to database files must be limited to relevant processes and to authorized, administrative users."
  file:
      path: "{{ pgs9stig_pgdata }}"
      mode: go-rwx
      owner: "{{ pgs9stig_postgres_user }}"
      group: "{{ pgs9stig_postgres_user }}"
      recurse: yes
  when:
      - pgs9_00_012000
  tags:
      - PGS9-00-012000


- name: "MEDIUM | PGS9-00-012200 | PostgreSQL must protect its audit configuration from unauthorized modification."
  block:
      - name: "MEDIUM | PGS9-00-012200 | PostgreSQL must protect its audit configuration from unauthorized modification."
        file:
            path: "{{ pgs9stig_pgdata }}"
            mode: go-rwx
            owner: "{{ pgs9stig_postgres_user }}"
            group: "{{ pgs9stig_postgres_user }}"
            recurse: yes

      - name: "MEDIUM | PGS9-00-012200 | PostgreSQL must protect its audit configuration from unauthorized modification."
        lineinfile:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
        module_defaults: "{{ pgs9stig_lineinfile }}"
        notify: reload postgres
        with_dict:
            log_file_mode: "0600"
        when: pgs9stig_log_destination == 'stderr'

      - name: "MEDIUM | PGS9-00-012200 | PostgreSQL must protect its audit configuration from unauthorized modification."
        lineinfile:
            path: "{{ pgs9stig_rsyslog_conf }}"
            line: $umask 0077
            insertbefore: BOF
        notify: restart rsyslog
        when: pgs9stig_with_rsyslog

      - name: "MEDIUM | PGS9-00-012200 | Verify log access on disk."
        file:
            path: "{{ pgs9stig_rsyslog_log_path }}"
            mode: go-rwx
        when: pgs9stig_with_rsyslog

      - name: "MEDIUM | PGS9-00-012200 | AUDIT | PostgreSQL must protect its audit configuration from unauthorized modification."
        debug:
            msg: "If PostgreSQL is configured to use syslog, verify that the logs are owned by root and have 0600 permissions. If they are not, this is a finding."
        changed_when:
            - pgs9stig_warn_manual
            - not pgs9stig_manual_012200
        when:
            - pgs9stig_log_destination == 'syslog'
            - not pgs9stig_with_rsyslog
  when:
      - pgs9_00_012200
  tags:
      - PGS9-00-012200


- name: "MEDIUM | PGS9-00-012500 | Audit records must be generated when categorized information (e.g., classification levels/security levels) is deleted."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_012500
  tags:
      - PGS9-00-012500

- name: "MEDIUM | PGS9-00-012600 | PostgreSQL must generate audit records when successful accesses to objects occur."
  debug:
      msg: |
          pgaudit is configured in PRELIM
          {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
  changed_when:
      - not pgs9stig_configure_pgaudit
      - pgs9stig_warn_finding
  when:
      - pgs9_00_012600
  tags:
      - PGS9-00-012600


- name: "MEDIUM | PGS9-00-012700 | PostgreSQL must generate audit records for all direct access to the database(s)."
  block:
      - name: "MEDIUM | PGS9-00-012700 | PATCH | PostgreSQL must generate audit records for all direct access to the database(s)."
        lineinfile:
            path: "{{ pgs9stig_pgdata }}/postgresql.conf"
        module_defaults: "{{ pgs9stig_lineinfile }}"
        notify: reload postgres
        with_dict:
            log_connections: "on"
            log_disconnections: "on"

      - name: "MEDIUM | PGS9-00-012700 | AUDIT | PostgreSQL must generate audit records for all direct access to the database(s)."
        debug:
            msg: |
                pgaudit is configured in PRELIM
                {{ pgs9stig_configure_pgaudit | ternary('', 'WARNING: pgaudit configuration was not selected') }}
        changed_when:
            - not pgs9stig_configure_pgaudit
            - pgs9stig_warn_finding
  when:
      - pgs9_00_012700
  tags:
      - PGS9-00-012700
